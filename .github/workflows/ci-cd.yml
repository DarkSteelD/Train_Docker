name: CI/CD Pipeline with Podman

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Clean up any existing containers with the same name (stop and remove them)
      - name: Clean up existing containers
        run: |
          podman stop db4 web4 || true  # Stop existing containers if they are running
          podman rm db4 web4 || true    # Remove existing containers if they exist

      # Step 3: Build the Podman image and run containers using default network
      - name: Build Podman image and run containers
        run: |
          podman build -t my-app-image .
          podman run -d --name db5 -e POSTGRES_DB=your_database -e POSTGRES_USER=your_user -e POSTGRES_PASSWORD=your_password -p 13411:5432 postgres:13
          podman run -d --name web5 -e DB_HOST=db5 -e DB_PORT=13411 -e DB_NAME=your_database -e DB_USER=your_user -e DB_PASS=your_password -p 5000:5000 my-app-image

      # Step 4: Initialize the database
      - name: Initialize database
        run: podman exec web5 python create_db.py  # Run your database setup script inside the web container

      # Step 5: Run tests and linters inside the Podman container
      - name: Run tests and linters
        run: |
          podman exec web5 python -m unittest discover  # Run your tests
          podman exec web5 flake8 app.py create_db.py    # Run your linter

      # Step 6: Stop and clean up containers
      - name: Clean up after tests
        run: |
          podman stop web5 db5
          podman rm web5 db5
