name: CI/CD Pipeline with Podman

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Podman image
        run: |
          podman build -t my-app-image .

      - name: Run Application Container
        run: |
          podman start web || podman run -d --name web --network=host \
            -e DB_HOST=localhost \
            -e DB_PORT=5432 \
            -e DB_NAME=your_database \
            -e DB_USER=your_user \
            -e DB_PASS=your_password \
            my-app-image
          sleep 5  # Wait for the application to start

      - name: Run tests
        run: |
          podman exec web python -m unittest discover
      - name: Check Application Health
        run: |
          podman exec web python -c "import sys; import httpx; response = httpx.get('http://localhost:5000/health'); sys.exit(0) if response.status_code == 200 else sys.exit(1)"

      - name: Deploy Project
        if: success()
        run: |
          echo "Deploying project..."
          # Tag the image with the registry URL and desired tag
          podman tag my-app-image my-registry.com/my-namespace/my-app-image:latest
          # Push the image to the registry
          podman push my-registry.com/my-namespace/my-app-image:latest
          # Update the running container on the deployment environment
          # Note: This assumes you have SSH access or appropriate permissions to the deployment environment
          # Here is a placeholder for deployment commands
          echo "Deployment commands would go here"

      - name: Clean up after tests
        run: |
          podman stop web
          podman rm web
